generator client {
  provider = "prisma-client-js"
  previewFeatures = ["nativeTypes"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model answers {
  id          Int       @id @default(autoincrement())
  content     String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  question_id Int
  questions   questions @relation(fields: [question_id], references: [id])

  @@index([question_id], name: "FK_answers_question_id_questions_id")
}

model applicants {
  id                 Int       @id @default(autoincrement())
  company_id         Int
  project_id         Int
  business_brief     String?
  business_model     String?
  created_at         DateTime  @default(now())
  updated_at         DateTime? @updatedAt
  deleted_at         DateTime?
  companies          companies @relation(fields: [company_id], references: [id])
  projects           projects  @relation(fields: [project_id], references: [id])

  @@index([company_id], name: "FK_applicants_company_id_companies_id")
  @@index([project_id], name: "FK_applicants_project_id_projects_id")
}

model applicant_documents {
  id                 Int      @id @default(autoincrement())
  applicant_id       Int
  document_id        Int
  applicants         applicants @relation(fields: [applicant_id], references: [id])
  company_documents  company_documents @relation(fields: [document_id], references: [id])
  @@index([applicant_id], name: "FK_applicant_documents_applicants_id")
  @@index([document_id], name: "FK_applicant_documents_company_documents_id")
}

model business_types {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  startups      startups[]
}

model companies {
  id                                                      Int                    @id @default(autoincrement())
  type_id                                                 Int?
  name                                                    String?
  logo_img                                                String?
  established_date                                        DateTime?              @db.Date
  homepage                                                String?
  description                                             String?
  team_intro                                              String?
  member_count                                            Int?
  is_saved                                                Boolean                @default(false)
  created_at                                              DateTime?              @default(now())
  updated_at                                              DateTime?              @updatedAt
  deleted_at                                              DateTime?  
  company_types                                           company_types?         @relation(fields: [type_id], references: [id])
  applicants                                              applicants[]
  company_documents                                       company_documents[]
  company_members                                         company_members[]
  company_news                                            company_news[]
  demodays                                                demodays[]
  IR_requests                                             IR_requests[]
  participants                                            participants[]
  partners                                                partners[]
  partner_likes                                           partner_likes[]
  project_likes                                           project_likes[]
  projects                                                projects[]
  questions                                               questions[]
  recent_views_project                                    recent_views_project[]
  startups                                                startups[]
  startup_likes                                           startup_likes[]
  users                                                   users[]

  @@index([type_id], name: "FK_companies_type_id_company_types_id")
}

model company_documents {
  id             Int            @id @default(autoincrement())
  company_id     Int
  doc_url        String
  type_id        Int
  created_at     DateTime?      @default(now())
  updated_at     DateTime?      @updatedAt
  deleted_at     DateTime?
  companies      companies      @relation(fields: [company_id], references: [id])
  document_types document_types @relation(fields: [type_id], references: [id])
  IR_requests    IR_requests[]

  @@index([company_id], name: "FK_company_documents_company_id_companies_id")
  @@index([type_id], name: "FK_company_documents_type_id_document_types_id")
}

model company_members {
  id         Int        @id @default(autoincrement())
  company_id Int?
  name       String?
  img        String?
  position   String?
  companies  companies? @relation(fields: [company_id], references: [id])

  @@index([company_id], name: "FK_company_members_company_id_companies_id")
}

model company_news {
  id         Int       @id @default(autoincrement())
  company_id Int
  URL        String
  companies  companies @relation(fields: [company_id], references: [id])

  @@index([company_id], name: "FK_company_news_company_id_companies_id")
}

model company_types {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model demodays {
  id            Int            @id @default(autoincrement())
  name          String?
  company_id    Int?
  streaming_url String?
  created_at    DateTime?      @default(now())
  updated_at    DateTime?      @updatedAt
  deleted_at    DateTime?
  companies     companies?     @relation(fields: [company_id], references: [id])
  participants  participants[]
  questions     questions[]

  @@index([company_id], name: "FK_demodays_company_id_companies_id")
}

model document_types {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique
  company_documents  company_documents[]
  required_documents required_documents[]
}

model eligibilities {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model eligible_sectors {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model email_auth {
  email       String @unique
  auth_number String @unique
  @@id([email, auth_number])

}

model invested_from {
  id                   Int               @id @default(autoincrement())
  startup_id           Int
  date                 DateTime          @db.Date
  invested_institution String
  invested_fund_id     Int
  corporate_value      Int
  series_id            Int
  investment_series    investment_series @relation(fields: [series_id], references: [id])
  investment_funds     investment_funds  @relation(fields: [invested_fund_id], references: [id])
  startups             startups          @relation(fields: [startup_id], references: [id])

  @@index([series_id], name: "FK_invested_from_series_id_investment_series_id")
  @@index([startup_id], name: "FK_invested_from_startup_id_startups_id")
  @@index([invested_fund_id], name: "FK_invested_from_invested_fund_investment_funds_id")
}

model invested_to {
  id                Int               @id @default(autoincrement())
  partner_id        Int
  date              DateTime
  invested_startup  String
  invested_fund_id  Int
  corporate_value   Int
  series_id         Int
  investment_series investment_series @relation(fields: [series_id], references: [id])
  investment_funds  investment_funds  @relation(fields: [invested_fund_id], references: [id])
  partners          partners          @relation(fields: [partner_id], references: [id])

  @@index([partner_id], name: "FK_invested_to_partner_id_companies_id")
  @@index([series_id], name: "FK_invested_to_series_id_investment_series_id")
  @@index([invested_fund_id], name: "FK_invested_from_invested_fund_investment_funds_id")
}

model investment_funds {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  partners      partners[]
  startups      startups[]
}

model investment_portfolio {
  id            Int           @id @default(autoincrement())
  partner_id    Int
  img_url       String
  partners      partners @relation(fields: [partner_id], references: [id])

  @@index([partner_id], name: "FK_investment_portfolio_partner_id_partners_id")
}

model investment_series {
  id            Int             @id @default(autoincrement())
  name          String
  invested_from          invested_from[]
  invested_to            invested_to[]
  startups               startups[]
  wish_investment_series wish_investment_series[]
}

model IR_requests {
  id                Int                @id @default(autoincrement())
  startup_id        Int
  partner_id        Int
  document_id       Int?
  is_checked        Int
  from_partner      Int
  created_at        DateTime           @default(now())
  updated_at        DateTime           @updatedAt
  company_documents company_documents? @relation(fields: [document_id], references: [id])
  partners          partners           @relation(fields: [partner_id], references: [id])
  startups          startups           @relation(fields: [startup_id], references: [id])

  @@index([document_id], name: "FK_IR_requests_document_id_company_documents_id")
  @@index([partner_id], name: "FK_IR_requests_partner_id_companies_id")
  @@index([startup_id], name: "FK_IR_requests_startup_id_companies_id")
}

model participants {
  id         Int       @id @default(autoincrement())
  demoday_id Int
  order      Int
  company_id Int
  companies  companies @relation(fields: [company_id], references: [id])
  demodays   demodays  @relation(fields: [demoday_id], references: [id])
  votes      votes[]

  @@index([company_id], name: "FK_participants_company_id_companies_id")
  @@index([demoday_id], name: "FK_participants_demoday_id_demodays_id")
}

model partners {
  id                    Int                    @id @default(autoincrement())
  company_id            Int                    @unique
  interst_technology_id Int?
  invested_total_id     Int?
  invested_counts       Int?
  created_at            DateTime?               @default(now())
  updated_at            DateTime?               @updatedAt
  deleted_at            DateTime?
  companies             companies              @relation(fields: [company_id], references: [id])
  technologies          technologies?          @relation(fields: [interst_technology_id], references: [id])
  investment_funds      investment_funds?      @relation(fields: [invested_total_id], references: [id])
  investment_portfolio  investment_portfolio[]
  IR_requests           IR_requests[]
  invested_to           invested_to[]

  @@index([company_id], name: "FK_partners_company_id_companies_id")
  @@index([interst_technology_id], name: "FK_partners_interst_technology_id_technologies_id")
  @@index([invested_total_id], name: "FK_partners_invested_total_id_investment_funds_id")
}

model partner_likes {
  id                                                  Int       @id @default(autoincrement())
  user_id                                             Int
  company_id                                          Int
  is_liked                                            Boolean
  created_at                                          DateTime  @default(now())
  updated_at                                          DateTime  @updatedAt
  users         users       @relation(fields: [user_id], references: [id])
  companies     companies   @relation(fields: [company_id], references: [id])

  @@index([user_id], name: "FK_partner_likes_company_liked_id_companies_id")
  @@index([company_id], name: "FK_partner_likes_company_likes_id_companies_id")
}

model phone_auth {
  id           Int    @id @default(autoincrement())
  phone_number String
  auth_number  String
}

model project_images {
  id         Int      @id @default(autoincrement())
  project_id Int
  img_url    String?
  projects   projects @relation(fields: [project_id], references: [id])

  @@index([project_id], name: "FK_project_images_project_id_projects_id")
}

model project_likes {
  id         Int       @id @default(autoincrement())
  user_id    Int
  project_id Int
  is_liked   Boolean
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  users      users     @relation(fields: [user_id], references: [id])
  projects   projects  @relation(fields: [project_id], references: [id])

  @@index([user_id], name: "FK_project_likes_user_id_companies_id")
  @@index([project_id], name: "FK_project_likes_project_id_projects_id")
}

model projects {
  id                   Int                    @id @default(autoincrement())
  name                 String?
  introduction         String?
  company               Int?
  host                 String?
  due_date             DateTime?
  eligible_sector      Int?
  eligibility          Int?
  outline              String?
  detail               String?
  application_method   String?
  caution              String?
  contact              String?
  request_open         Int?
  is_opened            Int
  hit                  Int
  application_url      String?
  is_saved             Boolean                @default(false) 
  created_at           DateTime?              @default(now())
  updated_at           DateTime?              @updatedAt
  deleted_at           DateTime?
  eligible_sectors     eligible_sectors?      @relation(fields: [eligible_sector], references: [id])
  eligibilities        eligibilities?         @relation(fields: [eligibility], references: [id])
  companies            companies?             @relation(fields: [company], references: [id])
  applicants           applicants[]
  project_images       project_images[]
  project_likes        project_likes[]
  recent_views_project recent_views_project[]
  required_documents   required_documents[]

  @@index([company], name: "FK_projects_company_companies_id")
  @@index([eligible_sector], name: "FK_projects_eligible_sector_eligible_sectors_id")
  @@index([eligibility], name: "FK_projects_eligibility_eligibilities_id")
}

model questions {
  id         Int       @id @default(autoincrement())
  content    String
  company_id Int
  user_id    Int
  created_at DateTime
  updated_at DateTime
  demoday_id Int
  companies  companies @relation(fields: [company_id], references: [id])
  demodays   demodays  @relation(fields: [demoday_id], references: [id])
  users      users     @relation(fields: [user_id], references: [id])
  answers    answers[]

  @@index([company_id], name: "FK_questions_company_id_companies_id")
  @@index([demoday_id], name: "FK_questions_demoday_id_demodays_id")
  @@index([user_id], name: "FK_questions_user_id_users_id")
}

model recent_views_project {
  id         Int       @id @default(autoincrement())
  project_id Int
  company_id Int
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  companies  companies @relation(fields: [company_id], references: [id])
  projects   projects  @relation(fields: [project_id], references: [id])

  @@index([company_id], name: "FK_recent_views_project_company_id_companies_id")
  @@index([project_id], name: "FK_recent_views_project_project_id_projects_id")
}

model required_documents {
  id             Int            @id @default(autoincrement())
  project_id     Int
  document_id    Int
  document_types document_types @relation(fields: [document_id], references: [id])
  projects       projects       @relation(fields: [project_id], references: [id])

  @@index([document_id], name: "FK_required_documents_document_id_document_types_id")
  @@index([project_id], name: "FK_required_documents_project_id_projects_id")
}

model sectors {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  startups      startups[]
}

model service_types {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  startups      startups[]
}

model signup_methods {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  users users[]
}

model startup_images {
  id            Int           @id @default(autoincrement())
  startup_id    Int
  img_url       String
  startups      startups      @relation(fields: [startup_id], references: [id])

  @@index([startup_id], name: "FK_startup_images_startup_id_startups_id")
}

model startups {
  id                      Int              @id @default(autoincrement())
  company_id              Int              @unique
  rep                     String?
  sector_id               Int?
  core_technology_id      Int?
  item_description        String?
  contact                 String?
  investment_series_id    Int?
  investment_fund_id      Int?
  address_road            String?
  address_detail          String?
  service_type_id         Int?
  business_type_id        Int?
  business_license_number String?
  email                   String?
  instagram_url           String?
  facebook_url            String?
  thumbnail               String?
  created_at              DateTime?          @default(now())
  updated_at              DateTime?          @updatedAt
  deleted_at              DateTime?
  business_types          business_types?    @relation(fields: [business_type_id], references: [id])
  companies               companies          @relation(fields: [company_id], references: [id])
  technologies            technologies?      @relation(fields: [core_technology_id], references: [id])
  sectors                 sectors?           @relation(fields: [sector_id], references: [id])
  service_types           service_types?     @relation(fields: [service_type_id], references: [id])
  investment_series       investment_series? @relation(fields: [investment_series_id], references: [id])
  investment_funds        investment_funds?  @relation(fields: [investment_fund_id], references: [id])
  invested_from           invested_from[]
  startup_images          startup_images[]
  wish_investment_series  wish_investment_series[]

  @@index([business_type_id], name: "FK_startups_business_type_id_business_types_id")
  @@index([company_id], name: "FK_startups_company_id_companies_id")
  @@index([core_technology_id], name: "FK_startups_core_technology_id_technologies_id")
  @@index([sector_id], name: "FK_startups_sector_id_sectors_id")
  @@index([service_type_id], name: "FK_startups_service_type_id_service_types_id")
  @@index([investment_series_id], name: "FK_startups_investment_series_id")
  @@index([investment_fund_id], name: "FK_startups_investment_funds_id")
}

model wish_investment_series {
  id                   Int    @id @default(autoincrement())
  startup_id           Int
  investment_series_id Int
  startups             startups     @relation(fields: [startup_id], references: [id])
  investment_series    investment_series @relation(fields: [investment_series_id], references: [id])

  @@index([startup_id], name: "FK_wish_investment_series_startups_id")
  @@index([investment_series_id], name: "FK_wish_investment_series_investment_series_id")
}

model startup_likes {
  id         Int       @id @default(autoincrement())
  user_id    Int
  company_id Int
  is_liked   Boolean
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  companies  companies @relation(fields: [company_id], references: [id])
  users      users     @relation(fields: [user_id], references: [id])

  @@index([company_id], name: "FK_startup_likes_company_id_companies_id")
  @@index([user_id], name: "FK_startup_likes_user_id_users_id")
}

model technologies {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  partners      partners[]
  startups      startups[]
}

model terms {
  id              Int               @id @default(autoincrement())
  name            String
  content         String
  required        Boolean
  user_agreements user_agreements[]
}

model user_agreements {
  id      Int   @id @default(autoincrement())
  user_id Int
  term_id Int
  terms   terms @relation(fields: [term_id], references: [id])
  users   users @relation(fields: [user_id], references: [id])

  @@index([term_id], name: "FK_user_agreements_term_id_terms_id")
  @@index([user_id], name: "FK_user_agreements_user_id_users_id")
}

model user_types {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  users     users[]
}

model users {
  id               Int               @id @default(autoincrement())
  sns_id           String?           @unique
  name             String
  type_id          Int?               
  profile_picture  String?
  email            String            @unique
  password         String?
  signup_method_id Int               @default(1)
  company_id       Int?
  phone_number     String?
  is_verified      Boolean           @default(false)
  created_at       DateTime          @default(now())
  updated_at       DateTime          @updatedAt
  companies        companies?        @relation(fields: [company_id], references: [id])
  signup_methods   signup_methods    @relation(fields: [signup_method_id], references: [id])
  user_types       user_types?       @relation(fields: [type_id], references: [id])
  questions        questions[]
  startup_likes    startup_likes[]
  user_agreements  user_agreements[]
  votes            votes[]
  partner_likes    partner_likes[]
  project_likes    project_likes[]

  @@index([company_id], name: "FK_users_company_id_companies_id")
  @@index([signup_method_id], name: "FK_users_signup_method_id_signup_methods_id")
  @@index([type_id], name: "FK_users_type_id_user_types_id")
}

model votes {
  id              Int          @id @default(autoincrement())
  user_id         Int
  participants_id Int
  created_at      DateTime     @default(now())
  participants    participants @relation(fields: [participants_id], references: [id])
  users           users        @relation(fields: [user_id], references: [id])

  @@index([participants_id], name: "FK_votes_participants_id_participants_id")
  @@index([user_id], name: "FK_votes_user_id_users_id")
}
